# Generated by Django 4.2.2 on 2023-07-19 16:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "date_edited",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата изменения",
                        null=True,
                        verbose_name="Дата редактирования",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Адрес email",
                        max_length=254,
                        unique=True,
                        verbose_name="Электронная почта",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Слаг", max_length=150, verbose_name="Слаг"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        help_text="Страна проживания пользователя",
                        max_length=50,
                        null=True,
                        verbose_name="Страна",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        help_text="Дата рождения пользователя",
                        null=True,
                        verbose_name="Дата рождения",
                    ),
                ),
                (
                    "about",
                    models.TextField(
                        help_text="О себе",
                        max_length=100,
                        null=True,
                        verbose_name="О себе",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Мужской", "Мужской"), ("Женский", "Женский")],
                        help_text="Пол пользователя",
                        max_length=10,
                        null=True,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "topics_for_discussion",
                    models.TextField(
                        help_text="Темы для разговора",
                        max_length=100,
                        null=True,
                        verbose_name="Темы для разговора",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Номер телефона пользователя",
                        max_length=30,
                        null=True,
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        help_text="Аватар пользователя",
                        null=True,
                        upload_to="user_photos/",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "age_is_hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Поле для скрытия/отображения возраста пользователя",
                    ),
                ),
                (
                    "gender_is_hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Поле для скрытия/отображения пола пользователя",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Наименование",
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
            ],
            options={
                "verbose_name": "Город проживания",
                "verbose_name_plural": "Города проживания",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Наименование",
                        max_length=255,
                        verbose_name="Название",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изучаемый язык",
                "verbose_name_plural": "Изучаемые языки",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="UserNativeLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        help_text="Язык",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="users.language",
                        verbose_name="Язык",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Пользователь",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь -> родной язык",
                "verbose_name_plural": "Пользователи -> родные языки",
            },
        ),
        migrations.CreateModel(
            name="UserForeignLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "skill_level",
                    models.CharField(
                        choices=[
                            ("Начинающий", "Начинающий"),
                            ("Средний", "Средний"),
                            ("Продвинутый", "Продвинутый"),
                        ],
                        help_text="Укажите уровень вашего владения языком.",
                        max_length=30,
                        verbose_name="Уровень владения языком",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        help_text="Язык",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="users.language",
                        verbose_name="Язык",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Пользователь",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь -> изучаемый язык",
                "verbose_name_plural": "Пользователи -> изучаемые языки",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="city",
            field=models.ForeignKey(
                help_text="Город проживания пользователя",
                max_length=255,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="users_in_this_city",
                to="users.city",
                verbose_name="Город проживания",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="foreign_languages",
            field=models.ManyToManyField(
                help_text="Языки, которые изучает пользователь",
                related_name="users_who_learn",
                through="users.UserForeignLanguage",
                to="users.language",
                verbose_name="Изучаемые языки",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="native_languages",
            field=models.ManyToManyField(
                help_text="Родной язык пользователя",
                related_name="users_for_whom_native",
                through="users.UserNativeLanguage",
                to="users.language",
                verbose_name="Родной язык",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.UniqueConstraint(
                fields=("username", "email"), name="уникальные пользователи"
            ),
        ),
    ]
