name: Build and Deploy

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd infra/
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
            sudo docker compose stop
            sudo docker compose rm web
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
            echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
            echo EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }} >> .env
            echo EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} >> .env
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            sudo docker compose up -d
            sudo docker compose exec web python manage.py makemigrations users
            sudo docker compose exec web python manage.py makemigrations chats
            sudo docker compose exec web python manage.py migrate
            sudo docker compose exec web python manage.py createsuperuser --username admin --email admin@example.com --no-input
            sudo docker compose exec web python manage.py collectstatic --no-input
